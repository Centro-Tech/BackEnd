name: CI/CD - Backend MimaStore

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        host: ["host_a", "host_b"] # Deploy em ambas as instâncias

    steps:
      # 1️⃣ Checkout do código
      - name: Checkout do repositório
        uses: actions/checkout@v4

      # 2️⃣ Configurar ambiente Java/Maven
      - name: Configurar Java e Maven
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      # 3️⃣ Build do backend
      - name: BE - Compilar projeto
        run: |
          cd "Sprint 4 - CleanArch/JavaSpringBoot/projetoMima"
          mvn clean package -DskipTests

            # 4️⃣ Definir host real e chave SSH (com reconstrução confiável)
      - name: Definir host real e chave SSH
        id: set_host
        run: |
          if [ "${{ matrix.host }}" = "host_a" ]; then
            echo "HOST_REAL=${{ secrets.REMOTE_HOST }}" >> $GITHUB_ENV
            echo "${{ secrets.EC2_SSH_KEY }}" > key_raw.txt
          else
            echo "HOST_REAL=${{ secrets.REMOTE_HOST_B }}" >> $GITHUB_ENV
            echo "${{ secrets.EC2_SSH_KEY_PRIVATE }}" > key_raw.txt
          fi

          # Substitui os "\n" literais por quebras de linha reais
          sed -i 's/\\n/\n/g' key_raw.txt
          cat key_raw.txt > private_key.pem
          chmod 600 private_key.pem

          echo "SSH_KEY_PATH=$PWD/private_key.pem" >> $GITHUB_ENV
          echo "✅ Chave SSH reconstruída e permissões aplicadas!"
          head -n 3 private_key.pem
          echo "..."

      - name: Debug Host
        run: |
          echo "Usando IP direto para teste"
          HOST_REAL=52.90.18.136  # Coloque aqui o IP público real da sua EC2
          ssh -i ${{ env.SSH_KEY_PATH }} -o StrictHostKeyChecking=no ec2-user@$HOST_REAL "echo Conexão OK"

      - name: Debug Host
        run: |
          echo "HOST_REAL=$HOST_REAL"


      - name: Teste SSH manual
        run: |
          echo "🔍 Testando conexão SSH manual..."
          ssh -i ${{ env.SSH_KEY_PATH }} -o StrictHostKeyChecking=no \
          ${{ secrets.REMOTE_USER }}@${{ env.HOST_REAL }} "echo ✅ Conexão SSH OK"


      # 5️⃣ Copiar arquivos para EC2 via SSH (rsync)
      - name: BE - Copiar arquivos via SSH (rsync)
        run: |
          echo "🚀 Iniciando cópia de arquivos para ${{ env.HOST_REAL }} ..."
          rsync -rltgoDzvO --delete -e "ssh -i ${{ env.SSH_KEY_PATH }} -o StrictHostKeyChecking=no" \
          "Sprint 4 - CleanArch/JavaSpringBoot/projetoMima/" \
          "${{ secrets.REMOTE_USER }}@${{ env.HOST_REAL }}:/home/${{ secrets.REMOTE_USER }}/backend"

      # 6️⃣ Buildar e subir container Docker remotamente
      - name: BE - Buildar imagem e subir container
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ env.HOST_REAL }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "🚀 Subindo backend MimaStore na EC2..."

            # Instalar Docker se não estiver presente
            if ! command -v docker &> /dev/null; then
              echo "⚙️ Instalando Docker..."
              if [ -x "$(command -v yum)" ]; then
                sudo yum install -y docker
              elif [ -x "$(command -v dnf)" ]; then
                sudo dnf install -y docker
              elif [ -x "$(command -v apt-get)" ]; then
                sudo apt-get update && sudo apt-get install -y docker.io
              fi
              sudo systemctl enable docker
              sudo systemctl start docker
              sudo usermod -aG docker $USER
            fi

            cd /home/${{ secrets.REMOTE_USER }}/backend

            echo "🛑 Parando containers antigos..."
            docker stop mimastore-backend || true
            docker rm mimastore-backend || true

            echo "🐳 Buildando nova imagem..."
            docker build -t mimastore-backend .

            echo "🚀 Subindo novo container..."
            docker run -d -p 8080:8080 --name mimastore-backend mimastore-backend

            echo "✅ Backend MimaStore atualizado e rodando!"
